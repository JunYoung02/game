
#include<Windows.h>
#include<stdio.h>
#include<conio.h>
#include<time.h>
#include<stdlib.h>

#define Space 32    // 스페이스바의 아스키코드 
#define DARKBLUE 1      // 글자 다크 블루 1
#define DARKGREEN 2         // 글자 다크 그린
#define GRAY 7      // 글자 그레이 7
#define DARKGRAY 8 // 글자 다크 그레이 8
#define SKYBLUE 11   // 글자 스카이 블루 11
#define RED 12      // 글자 빨간색 12
#define PURPLE 13   // 글자 보라색 13
#define YELLOW 14   // 글자 노란색 14
#define WHITE 15   // 글자 흰색 15

#define TRUE 1      // 참 1
#define FALSE 0     // 거짓 0


void gotoxy(int x, int y);   // 좌표 설정 함수
void chcolor(int co);      // 글자 색 입히기, co에 원하는 색 입력
void GameSet();         // 게임 테두리 
#define UP 72
#define DOWN 80
#define LEFT 75
#define RIGHT 77

// 이번에 추가한 함수들
void room();        // 사무실
void Qu();          // 문제 푸는 함수

typedef struct Quiz         // 퀴즈 구조체
{
    char question[100];    // 문제 저장
    char ex[100];          // 보기 저장
    char check;              // 정답이 맞는지 확인
}Q;


void Qu()
{
    int input, pass = 0, cnt = 0;   // input으로 정답 입력, pass로 정답 개수 확인, cnt로 현재 문제 번호 출력

    int i, j, r = 0;

    int rquiz[20] = { '\0' };       // 인덱스 0 ~ 19까지 중복되지 않는 랜덤 값 저장


    Q mun1[30] = {                                                     // 문제를 구조체로 만듦
        {"1. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"2.번문제...", "1번.. 2번.. 3번.. 4번,, 5번...", '2'},
        {"3. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"4. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"5. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"6. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"7. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"8. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"9. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"10. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        
        {"11. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"12. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"13. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"14. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"15. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"16. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"17. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"18. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"19. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"20. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        
        {"21. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"22. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"23. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"24. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"25. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"26. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"27. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"28. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"29. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'},
        {"30. 문제 ~~~", "1번.. 2번.. 3..번 4..번 5..번", '4'}
    };

    srand((unsigned)time(NULL));

    for (i = 0; i < 20; i++)        // 문제 순서 랜덤으로 설정
    {
        again:
        r = rand() % 30;

        for (j = 0; j <= i - 1; j++)
        {
            if (r == rquiz[j])
                goto again;
        }
        rquiz[i] = r;
    }

    i = 0;

    while (1)       // 문제 풀기 시작
    {
        cnt++;

        gotoxy(20, 37); printf("%s", mun1[rquiz[i]].question);
        gotoxy(22, 39); printf("%s", mun1[rquiz[i]].ex);

        gotoxy(70, 45); printf("-정답은 숫자키 누르기-");


        gotoxy(133, 38); printf("맞춘 개수 / 전체 개수: %d / 20", pass);
        gotoxy(133, 40); printf("현재문제 번호 : %2d", cnt);

        input = _getch();
        if (input == mun1[rquiz[i]].check)
            pass = pass + 1;                   // 정답 맞추면 1증가시켜줌

        i++;
        if (cnt == 20)      // 문제 개수가 20개일 경우
        {
            if (pass >= 15)     // 정답이 15개 이상이면 통과
                break;
            else                // 그렇지 않으면 문제 순서 랜덤 설정 다시하고, 번호, 정답 개수 초기화
            {
                for (i = 0; i < 20; i++)
                {
                    rquiz[i] = rand() % 20;

                    if (i > 1)
                    {
                        for (j = 0; j < i; j++)
                        {
                            if (rquiz[i] == rquiz[j])
                            {
                                i--;
                                break;
                            }
                        }
                    }
                }
                i = 0;
                cnt = 0;
                pass = 0;
            }
        }

    }

}

void room()     // 사무실 꾸미기 
{
    int i;

    chcolor(WHITE);
    gotoxy(5, 3); printf("사무실");        // 현재 있는 장소 표시


    gotoxy(5, 35);              // 문제를 출제할 공간
    for (i = 0; i < 79; i++)
    {
        chcolor(WHITE); printf("■");
    }

    gotoxy(131, 36); printf("■");
    gotoxy(131, 37); printf("■");
    gotoxy(131, 38); printf("■");
    gotoxy(131, 39); printf("■");
    gotoxy(131, 40); printf("■");
    gotoxy(131, 41); printf("■");
    gotoxy(131, 42); printf("■");
    gotoxy(131, 43); printf("■");
    gotoxy(131, 44); printf("■");
    gotoxy(131, 45); printf("■");
    gotoxy(131, 46); printf("■");
    gotoxy(131, 47); printf("■");

}


int main()
{
    int kb;
    system("mode con cols=170 lines=50");    //cols = 칸/행 (가로)  lines = 줄/열 (세로)


    GameSet();          // 게임 테두리 출력

    // 이번 코드 동작
    room();

    Qu();
    // 계속하려면,, 이 보여서 없애주기 위해 만듦, 지우면 됨

    /*
    kb = _getch();
    if (kb == Space)
    {
        system("cls");
    }
    */
}


void gotoxy(int x, int y)   // 좌표 설정 함수
{
    COORD pos = { x,y };
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);
}

void chcolor(int co)      // 글자 색 입히기, co에 원하는 색 입력
{

    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), co);
}

void GameSet()      // 게임 테두리
{
    int i;

    chcolor(PURPLE);
    gotoxy(3, 2);  printf("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■");

    for (i = 3; i < 48; i++)
    {
        gotoxy(3, i); printf("■");
        gotoxy(163, i); printf("■");
    }

    gotoxy(3, 48);  printf("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■");
}