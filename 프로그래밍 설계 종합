#include<Windows.h>
#include<stdio.h>
#include<conio.h>
#include<time.h>
#include<string.h>
#include<ctype.h>
#include<stdlib.h>
#include "Console.h"

#define STAR_MAX 50  //별의 최대 갯수 
#define length 10    // 아이디와 비밀번호 length로 함
#define Space 32    // 스페이스바의 아스키코드 
#define DARKBLUE 1      // 글자 다크 블루 1
#define DARKGREEN 2         // 글자 다크 그린
#define GRAY 7      // 글자 그레이 7
#define DARKGRAY 8 // 글자 다크 그레이 8
#define SKYBLUE 11   // 글자 스카이 블루 11
#define RED 12      // 글자 빨간색 12
#define PURPLE 13   // 글자 보라색 13
#define YELLOW 14   // 글자 노란색 14
#define WHITE 15   // 글자 흰색 15
#define BLUE 9     // 글자 블루 9
#define UP 72
#define DOWN 80
#define LEFT 75
#define RIGHT 77

void gotoxy(int x, int y);   // 좌표 설정 함수
void chcolor(int co);      // 글자 색 입히기, co에 원하는 색 입력
void GameSet();         // 게임 테두리 
void StartGame();        // 게임 시작 화면
void GameSelect();       // 게임 모드 선택
void RedRain();         // 빨간색 비 출력 
void join();       // id 만드는 함수
void join2();      // password 만드는 함수
void introduce();  // 회원가입 안내사항
int login(char id[], char pw[]);      // id 로그인
void login_main();      // login화면
void make_username();   // 닉네임 만드는 함수
void gamec1();
void gamec2();
void gamec3();
void gamec4();
void gamec5();
void gamec6();
void gamec7();
void gamec8();
void gmaec9();
void story();
void story2();
void story3();      // room 에서 대화 내용
void drop();
void intro();
void player();          // 캐릭터 그리기
void stairs();  // 공룡게임 장애물 그리기
void game1();   // 게임1 공룡 게임
int gameover(int player, int stairs);    // 게임 오버
void drawway();     // 복도 그리기 힘수
void moveway();     // 복도에서 움직이는 함수
void room();        // 사무실
void Qu();          // 문제 푸는 함수
void drawmap();     // 미로 그리기
void move_miro();      // 미로에서 캐릭터 이동

typedef struct Quiz         // 퀴즈 구조체
{
    char question[100];    // 문제 저장
    char ex[100];          // 보기 저장
    char check;              // 정답이 맞는지 확인
}Q;

typedef struct data {            // 아이디와 비밀번호를 담을 구조체 선언
    char id[length + 1];         // NULL을 마지막에 들어가기 때문에 +1을 한다
    char pw[length + 1];
    char user[length + 1];
}D;

D member[1];        // 하나의 구조체 member로 설정.

int i = 0;
typedef struct Star
{
    int x;
    int y;
    int LiveFlag;         //   별의 생성 유무
}Star;

Star g_Star[STAR_MAX];      //   별 배열

char Star_Unit = 'X';      //   별의 모양

//   플레이어의 모양 및 정보를 구성한다.
typedef struct Player {
    int x;
    int y;
}Player;

Player g_Player;            //   플레이어 구조체

#define P_COUNT        6      //   플레이어 모양의 길이

char Player_Unit[P_COUNT + 1] = "○○○";   //   플레이어의 모양으로 NULL문자 때문에 1을 추가

char screen[HEIGHT][WIDTH];      //   오브젝트들을 저장할 2차원 배열

/*   그리는 함수로, 이차원 배열screen에 있는 오브젝트들을 렌더한다.   */
void Draw(void);

/*   지우는 함수로, 이차원 배열screen에 있는 내용을 지운다. */
void Clear(void);

/*   플레이어를 그려주는 함수로 이차원 배열screen에 플레이어를 저장한다.   */
void DrawPlayer(void);

/*   오브젝트들의 정보를 초기화 하는 함수   */
void InitObject(void);

/*   키 입력을 통해 플레이어를 움직이는 함수      */
void PlayerAction(void);

/* 플레이어가 맵 영역을 벗어났는지 체크를 해서 위치를 조정하는 함수 */
void Block(void);

/*   별들을 그려주는 함수로 이차원 배열screen에 별들을 저장한다.   */
void DrawStar(void);

/*   생성된 별들만 아래로 이동시키는 함수   */
void StarAction(void);

/*   별을 생성하는 함수 */
void CreateStar(void);

/*   별들과 플레이어의 충돌체크하는 함수   */
int CheckCollision(void);

void game_recipe();
/*  게임의 끝을 알려줌 */
void gotoxy(int x, int y);



void gamec1() {
    chcolor(DARKGRAY);
    gotoxy(40, 16);  printf("      $$$$$$       ");
    gotoxy(40, 17);  printf("     $//////$               ");
    chcolor(WHITE);
    gotoxy(40, 18);  printf("    (|◎  ◎|)     ");
    gotoxy(40, 19);  printf("     ＼ ⌒  /        ");
    gotoxy(40, 20);  printf("      ￣||￣        ");
    chcolor(SKYBLUE);
    gotoxy(40, 21);  printf("   /￣  */￣￣|＼       ");
    gotoxy(40, 22);  printf("  /|    /     | |      ");
    gotoxy(40, 23);  printf(" ＼|   /*     | |        ");
    gotoxy(40, 24);  printf("   |＼/ *     |/         ");
    gotoxy(40, 25);  printf("   |  ＼*    /|          ");
    chcolor(DARKGRAY);
    gotoxy(40, 26);  printf("   |￣￣￣￣￣|                       ");
    gotoxy(40, 27);  printf("   |    /＼   |            ");
    gotoxy(40, 28);  printf("   |   |  |   |           ");
    gotoxy(40, 29);  printf("   |   |  |   | ");
    gotoxy(40, 30);  printf("   |   |  |   |             ");
    gotoxy(40, 31);  printf("   |￣￣| |￣￣|                 ");
    gotoxy(40, 32);  printf("   |§  ▶|§  ▶               ");
    gotoxy(40, 33);  printf("    ￣￣   ￣￣      ");
}
void gamec2() {
    chcolor(DARKGRAY);
    gotoxy(80, 15);  printf("        ｜￣￣￣￣￣￣￣￣｜              ");
    gotoxy(80, 16);  printf("        ｜                ｜         ");
    gotoxy(80, 17);  printf("        ｜                ｜           ");
    gotoxy(80, 18);  printf(" ｜￣￣￣                  ￣￣￣｜             ");
    chcolor(WHITE);
    gotoxy(80, 19);  printf("  ￣↙ㅣ￣￣￣￣￣￣￣￣￣ ㅣ↘￣          ");
    gotoxy(80, 20);  printf("  ↙  ㅣ ( ￠ )    ( ￠ )  ㅣ  ↘ ");
    gotoxy(80, 21);  printf("  ↖ (ㅣ      ㅣ  ㅣ       ㅣ) ↗ ");
    gotoxy(80, 22);  printf("    ↖ㅣ     ㅣ    ㅣ      ㅣ↗       ");
    gotoxy(80, 23);  printf("      ㅣ     ＼⌒ ⌒／     ㅣ       ");
    gotoxy(80, 24);  printf("      ㅣ                   ㅣ        ");
    gotoxy(80, 25);  printf("      ㅣ(   ＼ㅡㅡㅡ／    )ㅣ      ");
    gotoxy(80, 26);  printf("       ＼    ⌒⌒⌒⌒      /");
    gotoxy(80, 27);  printf("        ＼   ;;;;;;;      /       ");
    gotoxy(80, 28);  printf("       ㅣ ￣￣＼￣/￣￣￣  ㅣ                        ");
    chcolor(DARKGRAY);
    gotoxy(80, 29);  printf("    /￣￣￣￣￣＼/￣￣￣￣￣￣＼                     ");
    gotoxy(80, 30);  printf("   /                           ＼      ");
    gotoxy(80, 31);  printf("  ㅣ                            ㅣ      ");
    gotoxy(80, 32);  printf("  ㅣ         ○                 ㅣ       ");
    gotoxy(80, 33);  printf("  ㅣ                            ㅣ       ");
    gotoxy(80, 34);  printf("  ㅣ                            ㅣ       ");
    gotoxy(80, 35);  printf("  ㅣ         ○      ○         ㅣ       ");
    gotoxy(80, 36);  printf("  ㅣ▤▤▤▤▤▤▤▤▤▤▤▤▤▤ㅣ       ");
    gotoxy(80, 37);  printf("  ㅣ         ○      ○         ㅣ       ");
    gotoxy(80, 38);  printf("  ㅣ                            ㅣ       ");
}
void gamec3() {
    chcolor(DARKGRAY);
    gotoxy(45, 24);  printf("         $$$$$$$$$$$       ");
    gotoxy(45, 25);  printf("       $$$$$$$$$$$$$$ ");
    gotoxy(45, 26);  printf("      $//////////////$     ");
    chcolor(WHITE);
    gotoxy(45, 27);  printf("     (|  (◎)   (◎) |)        ");
    gotoxy(45, 28);  printf("      |     〈       | ");
    gotoxy(45, 29);  printf("      |      ㅡ      |      ");
    gotoxy(45, 30);  printf("      ＼            / ");
    gotoxy(45, 31);  printf("        ￣ ＼￣/￣￣             ");
    chcolor(SKYBLUE);
    gotoxy(45, 32);  printf("  /|￣￣￣￣*  /￣￣￣￣ |＼   ");
    gotoxy(45, 33);  printf(" / |        * /          |  |       ");
    gotoxy(45, 34);  printf(" | |        */           |  |   ");
    gotoxy(45, 35);  printf(" ＼|        /            |  |       ");
    gotoxy(45, 36);  printf("   |＼     /*            | /          ");
    gotoxy(45, 37);  printf("   |  ＼  / *            |/    ");
    gotoxy(45, 38);  printf("   |    ＼  *            |             ");
    gotoxy(45, 39);  printf("   |      ＼*            |          ");
}
void gamec4() {
    gotoxy(40, 20);  printf(" ▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣");
    gotoxy(40, 21);  printf(" ▣    □     □ † □□□□   □†        □  □ †  □□    □  †  □□□□□ ▣");
    gotoxy(40, 22);  printf(" ▣  □ □  □□ †      □  □□† □□□ □  □ †          □  †          □ ▣");
    gotoxy(40, 23);  printf(" ▣ □   □   □ †    □      □† □     □  □ †  □□    □□†          □ ▣");
    gotoxy(40, 24);  printf(" ▣              †          □□† □     □□□ † □  □   □  †          □ ▣");
    gotoxy(40, 25);  printf(" ▣      □□    †   □□□□ □† □     □  □ †  □□    □  †   □  □    ▣");
    gotoxy(40, 26);  printf(" ▣     □  □   †         □   † □□□ □  □ †              †   □  □    ▣");
    gotoxy(40, 27);  printf(" ▣      □□    †   □□□□   †        □  □ †   □□□□   † □□□□□  ▣");
    gotoxy(40, 28);  printf(" ▣              †   □         †               †         □   †             ▣");
    gotoxy(40, 29);  printf(" ▣              †   □□□□   †               †         □   †             ▣");
    gotoxy(40, 30);  printf(" ▣◈◈◈◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈▣");
    gotoxy(40, 31);  printf(" ▣■■■■■■■†■■■■■■■†■■■ ■■■■†■■■■■■■†■■■ ■■■▣");
    gotoxy(40, 32);  printf(" ▣◈◈◈◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈▣");
    gotoxy(40, 33);  printf(" ▣◈◈◈◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈▣");
    gotoxy(40, 34);  printf(" ▣■■■■■■■†■■■■■■■†■■■ ■■■■†■■■■■■■†■■■ ■■■▣");
    gotoxy(40, 35);  printf(" ▣□□▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒▒▒▒▒▒▒†▒▒▒ ▒▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒ □□▣");
    gotoxy(40, 36);  printf(" ▣□□▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒▒▒▒▒▒▒†▒▒▒ ▒▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒ □□▣");
    gotoxy(40, 37);  printf(" ▣□□▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒▒▒▒▒▒▒†▒▒▒ ▒▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒ □□▣");
    gotoxy(40, 38);  printf(" ▣□□▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒▒▒▒▒▒▒†▒▒▒ ▒▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒ □□▣");
    gotoxy(40, 39);  printf(" ▣■■■■■■■†■■■■■■■†■■■ ■■■■†■■■■■■■†■■■ ■■■▣");
    gotoxy(40, 40);  printf(" ▣◈◈◈◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈▣");
    gotoxy(40, 41);  printf(" ▣◈◈◈◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈▣");
    gotoxy(40, 42);  printf(" ▣■■■■■■■†■■■■■■■†■■■ ■■■■†■■■■■■■†■■■ ■■■▣");
    gotoxy(40, 43);  printf(" ▣◈◈◈◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈▣");
    gotoxy(40, 44);  printf(" ▣◈◈◈◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈▣");
    gotoxy(40, 45);  printf(" ▣▩▩▩▩▩▩▩†▩▩▩▩▩▩▩†▩▩▩▩▩▩▩ †▩▩▩▩▩▩▩†▩▩▩ ▩▩▩▣");
    gotoxy(40, 46);  printf(" ▣▩▩▩▩▩▩▩†▩▩▩▩▩▩▩†▩▩      ▩▩ †▩▩▩▩▩▩▩†▩▩▩ ▩▩▩▣");
    gotoxy(40, 47);  printf(" ▣▩▩▩▩▩▩▩†▩▩▩▩▩▩▩†▩▩      ▩▩ †▩▩▩▩▩▩▩†▩▩▩ ▩▩▩▣");
    gotoxy(40, 47);  printf(" ▣▩▩▩▩▩▩▩†▩▩▩▩▩▩▩†▩▩      ▩▩ †▩▩▩▩▩▩▩†▩▩▩ ▩▩▩▣");
}
void gamec5() {
    gotoxy(60, 14);  printf("              ///////＼");
    gotoxy(60, 15);  printf("            $///////////$     ㅡ");
    gotoxy(60, 16);  printf("           (| |○| |○||)    ㅣㅣ");
    gotoxy(60, 17);  printf("            |  ￣/  ￣ |     ㅣㅣ");
    gotoxy(60, 18);  printf("            ＼   ㅁ    /     ㅣㅣ");
    gotoxy(60, 19);  printf("             ￣￣l  l￣      ㅣㅣ ");
    gotoxy(60, 20);  printf("          ㅣ￣￣￣  ￣￣￣ㅣ ㅣㅣ");
    gotoxy(60, 21);  printf("          ㅣ              ㅣ ㅣㅣ");
    gotoxy(60, 22);  printf("          ㅣ              ㅣ ㅣㅣ");
    gotoxy(60, 23);  printf("          ㅣ            / ㅣ ㅣㅣ");
    gotoxy(60, 24);  printf("          ∂ㅣ￣￣￣￣￣ㅣ/  ㅣㅣ");
    gotoxy(60, 25);  printf("          ∂￣￣￣￣￣￣￣ㅣ ㅣㅣ");
    gotoxy(60, 26);  printf("      / ￣￣￣￣￣/       /  ㅣㅣ");
    gotoxy(60, 27);  printf("      /      /━━━━━          ㅣㅣ");
    gotoxy(60, 28);  printf("     /  / /  / ㅣ￣￣￣￣￣￣  ㅣ");
    gotoxy(60, 29);  printf("    /  / /  /   ￣￣￣ㅣ ㅣ￣￣￣");
    gotoxy(60, 30);  printf("   /  / /  /          ㅣ ㅣ");
    gotoxy(60, 31);  printf("  /  / /  /           ㅣ ㅣ");
    gotoxy(60, 32);  printf("◀∽│◀∽│            ㅣ ㅣ");
    gotoxy(60, 33);  printf("               ￣￣￣￣￣￣￣￣￣");
}
void gamec6() {
    gotoxy(80, 20);  printf("              $$$$$$$$$");
    gotoxy(80, 21);  printf("            $$$$$$$$$$$$$     ㅡ");
    gotoxy(80, 22);  printf("           (| (￠)(￠) |)    ㅣㅣ");
    gotoxy(80, 23);  printf("            |    <     |     ㅣㅣ");
    gotoxy(80, 24);  printf("            ＼   ∪    /     ㅣㅣ");
    gotoxy(80, 25);  printf("             ￣￣l  l￣      ㅣㅣ ");
    gotoxy(80, 26);  printf("          ㅣ￣￣￣  ￣￣￣ㅣ ㅣㅣ");
    gotoxy(80, 27);  printf("          ㅣ              ㅣ ㅣㅣ");
    gotoxy(80, 28);  printf("          ㅣ              ㅣ ㅣㅣ");
    gotoxy(80, 29);  printf("          ㅣ            / ㅣ ㅣㅣ");
    gotoxy(80, 30);  printf("          ∂ㅣ￣￣￣￣￣ㅣ/  ㅣㅣ");
    gotoxy(80, 31);  printf("          ∂￣￣￣￣￣￣￣ㅣ ㅣㅣ");
    gotoxy(80, 32);  printf("      / ￣￣￣￣￣/       /  ㅣㅣ");
    gotoxy(80, 33);  printf("      /      /━━━━━          ㅣㅣ");
    gotoxy(80, 34);  printf("     /  / /  / ㅣ￣￣￣￣￣￣  ㅣ");
    gotoxy(80, 35);  printf("    /  / /  /   ￣￣￣ㅣ ㅣ￣￣￣");
    gotoxy(80, 36);  printf("   /  / /  /          ㅣ ㅣ");
    gotoxy(80, 37);  printf("  /  / /  /           ㅣ ㅣ");
    gotoxy(80, 38);  printf("◀∽│◀∽│            ㅣ ㅣ");
    gotoxy(80, 39);  printf("               ￣￣￣￣￣￣￣￣￣");
}
void gamec7() {
    gotoxy(40, 20);  printf("             ////////＼");
    gotoxy(40, 21);  printf("            ///////////＼     ㅡ");
    gotoxy(40, 22);  printf("           (|  ⊙   ⊙ |)    ㅣㅣ");
    gotoxy(40, 23);  printf("            |    ∇    |     ㅣㅣ");
    gotoxy(40, 24);  printf("            ＼   ⊥    /     ㅣㅣ");
    gotoxy(40, 25);  printf("             ￣￣l  l￣      ㅣㅣ ");
    gotoxy(40, 26);  printf("          ㅣ￣￣￣  ￣￣￣ㅣ ㅣㅣ");
    gotoxy(40, 27);  printf("          ㅣ              ㅣ ㅣㅣ");
    gotoxy(40, 28);  printf("          ㅣ              ㅣ ㅣㅣ");
    gotoxy(40, 29);  printf("          ㅣ            / ㅣ ㅣㅣ");
    gotoxy(40, 30);  printf("          ∂ㅣ￣￣￣￣￣ㅣ/  ㅣㅣ");
    gotoxy(40, 31);  printf("          ∂￣￣￣￣￣￣￣ㅣ ㅣㅣ");
    gotoxy(40, 32);  printf("      / ￣￣￣￣￣/       /  ㅣㅣ");
    gotoxy(40, 33);  printf("      /      /━━━━━          ㅣㅣ");
    gotoxy(40, 34);  printf("     /  / /  / ㅣ￣￣￣￣￣￣  ㅣ");
    gotoxy(40, 35);  printf("    /  / /  /   ￣￣￣ㅣ ㅣ￣￣￣");
    gotoxy(40, 36);  printf("   /  / /  /          ㅣ ㅣ");
    gotoxy(40, 37);  printf("  /  / /  /           ㅣ ㅣ");
    gotoxy(40, 38);  printf("◀∽│◀∽│            ㅣ ㅣ");
    gotoxy(40, 39);  printf("               ￣￣￣￣￣￣￣￣￣");
}
void gamec8() {
    gotoxy(40, 20);  printf("              $$$$$$$$");
    gotoxy(40, 21);  printf("            $$$$$$$$$$$$$     ㅡ");
    gotoxy(40, 22);  printf("           (|  ○   ○ |)    ㅣㅣ");
    gotoxy(40, 23);  printf("            |   〈     |     ㅣㅣ");
    gotoxy(40, 24);  printf("            ＼   ㄴ    /     ㅣㅣ");
    gotoxy(40, 25);  printf("             ￣￣l  l￣      ㅣㅣ ");
    gotoxy(40, 26);  printf("          ㅣ￣￣￣  ￣￣￣ㅣ ㅣㅣ");
    gotoxy(40, 27);  printf("          ㅣ              ㅣ ㅣㅣ");
    gotoxy(40, 28);  printf("          ㅣ              ㅣ ㅣㅣ");
    gotoxy(40, 29);  printf("          ㅣ            / ㅣ ㅣㅣ");
    gotoxy(40, 30);  printf("          ∂ㅣ￣￣￣￣￣ㅣ/  ㅣㅣ");
    gotoxy(40, 31);  printf("          ∂￣￣￣￣￣￣￣ㅣ ㅣㅣ");
    gotoxy(40, 32);  printf("      / ￣￣￣￣￣/       /  ㅣㅣ");
    gotoxy(40, 33);  printf("      /      /━━━━━          ㅣㅣ");
    gotoxy(40, 34);  printf("     /  / /  / ㅣ￣￣￣￣￣￣  ㅣ");
    gotoxy(40, 35);  printf("    /  / /  /   ￣￣￣ㅣ ㅣ￣￣￣");
    gotoxy(40, 36);  printf("   /  / /  /          ㅣ ㅣ");
    gotoxy(40, 37);  printf("  /  / /  /           ㅣ ㅣ");
    gotoxy(40, 38);  printf("◀∽│◀∽│            ㅣ ㅣ");
    gotoxy(40, 39);  printf("               ￣￣￣￣￣￣￣￣￣");
}
void gmaec9() {
    gotoxy(50, 8); printf("                                                                              ■■■■■■■■■■■■■■■■");
    gotoxy(50, 9); printf("                                                                            ■■■■■■■■■■■■■■■■■");
    gotoxy(50, 10); printf("                                                                          ■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 11); printf("                                                                        ■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 12); printf("                                                                      ■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 13); printf("                                                                    ■■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 14); printf("                                                                  ■■■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 15); printf("                                                                ■■■■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 16); printf("                                                              ■■■■■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 17); printf("                                                            ■■■■■■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 18); printf("                                                          ■■■■■■■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 19); printf("                                                        ■■■■■■■■■■■■■■■■■■■■■■    ■■■");
    gotoxy(50, 20); printf("                                                      ■■■■■■■■■■■■■■■■■■■■■■  ■ ■ ■■");
    gotoxy(50, 21); printf("                                                    ■■■■■■■■■■■■■■■■■■■■■■■■    ■■■");
    gotoxy(50, 22); printf("                                                  ■■■■■■■■■■■■■■■■■■■■■■■■  ■■  ■■");
    gotoxy(50, 23); printf("                                                ■■■■■■■■■■■■■■■■■■■■■■■■■■    ■■■");
    gotoxy(50, 24); printf("                                              ■■■■■■■■■■■■■■■■■■■■■■■■■■  ■■  ■■");
    gotoxy(50, 25); printf("                                            ■■■■■■■■■■■■■■■■■      ■■■■■■  ■■■■  ■");
    gotoxy(50, 26); printf("                                          ■■■■■■■■■■■■■■■■■■  ■  ■■■■■■■■■■■■■");
    gotoxy(50, 27); printf("                                        ■■■■■■■■■■■■■■■■■■■      ■■■■■■■■■■■■■");
    gotoxy(50, 28); printf("                                      ■■■■■■■■■■■■■■■■■■■          ■■■■■■■■■■■■");
    gotoxy(50, 29); printf("                                    ■■■■■■■■■■■■■■■■■■■■■■  ■■■■■■■■■■■■■■");
    gotoxy(50, 30); printf("                                  ■■■■■■■      ■■■■■■■■■■■■  ■  ■■■■■■■■■■■■■");
    gotoxy(50, 31); printf("                                ■■■■■■■  ■■■  ■■■■■■■■■■  ■■■  ■■■■■■■■■■■■");
    gotoxy(50, 32); printf("                              ■■■■■■■■■  ■  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 33); printf("                            ■■■■■■■■■■      ■■■■■■■■■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 34); printf("                          ■■■■■■■■■■  ■  ■  ■■■■■■■■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 35); printf("                        ■■■■■■■■■■■■■  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 36); printf("                      ■■■■■■■■■■■■■  ■  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 37); printf("                    ■■■■■■■■■■■■■  ■■■  ■■■■■■■■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 38); printf("                  ■■■■■■■■■■■■■  ■■■■■  ■■■■■■■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 39); printf("                ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 40); printf("              ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 41); printf("            ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■");
    gotoxy(50, 42); printf("          ■■■■        ■  ■■  ■  ■■■  ■■    ■■  ■■  ■  ■■■  ■  ■■■  ■■  ■■■■■■");
    gotoxy(50, 43); printf("        ■■■■■  ■■■■  ■■  ■    ■■  ■  ■■  ■  ■  ■■■  ■  ■■    ■■  ■■  ■■■■■■");
    gotoxy(50, 44); printf("      ■■■■■■        ■  ■■  ■  ■  ■  ■  ■■■■    ■■■■■  ■■■  ■  ■  ■■  ■■■■■■");
    gotoxy(50, 45); printf("    ■■■■■■■■■■  ■  ■■  ■  ■■    ■  ■■  ■  ■  ■■■■  ■■■  ■■    ■■  ■■■■■■");
    gotoxy(50, 46); printf("  ■■■■■■■■        ■        ■  ■■■  ■■    ■■  ■■  ■■■  ■■■  ■■■  ■■        ■■■");
    gotoxy(50, 47); printf("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■");

}
void introduce()        // 회원가입 안내사항
{
    chcolor(RED);
    gotoxy(60, 14); printf("<회원가입 유의사항>\n\n");
    gotoxy(60, 15); printf("1. 아이디와 비밀번호의 길이는 10자이내로 합니다.\n");
    gotoxy(60, 16); printf("2. 아이디와 비밀번호는 소문자와 숫자의 조합으로 합니다.\n");
    gotoxy(60, 17); printf("3. 띄어쓰기는 불가능 합니다.\n\n");
}
void join()   // id 만드는 함수
{
    chcolor(WHITE);
    char* str;

rute:

    gotoxy(60, 21); printf("아이디를 입력하시오 : __________\b\b\b\b\b\b\b\b\b\b");
    scanf_s("%s", member->id, sizeof(member->id));          // member.id에 저장됨.

    str = member->id;                                       // member.id를 str에 옮김.

    if (strlen(str) == 0)                                   // 글자수 검사
    {
        gotoxy(60, 23); printf("글자수를 초과하였습니다.\n");
        system("cls");
        GameSet();
        goto rute;
    }

    for (i = 0; i < strlen(str); i++)                       // 소문자나 숫자의 검사
    {
        if (isdigit(*(str + i)) == 0 && islower(*(str + i)) == 0)
        {
            gotoxy(60, 23); printf("소문자나 숫자의 조합이 아닙니다.\n");
            system("cls");
            GameSet();
            goto rute;
        }
    }
}
void join2()   // password 만드는 함수
{
    chcolor(WHITE);
    char* str2;

rute:

    gotoxy(60, 22); printf("비밀번호를 입력하시오 : __________\b\b\b\b\b\b\b\b\b\b");
    scanf_s("%s", member->pw, sizeof(member->pw));         // member.pw에 저장됨.

    str2 = member->pw;

    if (strlen(str2) == 0)                           // 글자수 검사
    {
        gotoxy(60, 25); printf("글자수를 초과하였습니다.\n");
        system("cls");
        GameSet();
        goto rute;
    }

    for (i = 0; i < strlen(str2); i++)                  // 소문자나 숫자의 검사
    {
        if (isdigit(*(str2 + i)) == 0 && islower(*(str2 + i)) == 0)
        {
            gotoxy(60, 25); printf("소문자나 숫자의 조합이 아닙니다.\n");
            system("cls");
            GameSet();
            goto rute;
        }
    }
}
void login_main()       // login 화면
{
    chcolor(WHITE);
    int key;
    char id[length + 1];    // id 입력
    char pw[length + 1];    // password 입력

    int i = 1;
    int j = 1;
    while (1)
    {
        chcolor(WHITE);
        gotoxy(70, 21); printf("<sungkuyl of top 로그인>\n");
        gotoxy(70, 22); printf("로그인 시도 횟수 : %d\n\n", j);
        gotoxy(70, 23); printf("아이디 : ");
        scanf_s("%s", id, sizeof(id));
        gotoxy(70, 24); printf("비밀번호 : ");
        scanf_s("%s", pw, sizeof(pw));
        printf("\n");
        key = login(id, pw);

        i++;
        j++;
        system("cls");
        GameSet();
        if (key == 2)
        {
            /* FILE* fp;
             errno_t err;;
             err = fopen_s(&fp, member->id, "wt");    // member.id를 토대로 앞으로 세이브할 파일을 생성.

             if (fp == NULL)
             {
                 printf("파일 생성에 실패하였습니다.\n");
                 printf("프로그램을 다시 실행하십시오.\n");
                 exit(1);
             }*/
            break;
        }

        if (i == 6)
        {
            gotoxy(70, 25); printf("로그인 시도를 %d회이상 하였으므로\n", j - 1);
            gotoxy(70, 26); printf("30초후에 다시 시도하십시오.\n");
            i = 1;
            Sleep(30000);
        }
    }

}
void gotoxy(int x, int y)   // 좌표 설정 함수
{
    COORD pos = { x,y };
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);
}
void chcolor(int co)      // 글자 색 입히기, co에 원하는 색 입력
{

    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), co);
}
void GameSet()
{
    int i;

    chcolor(PURPLE);
    gotoxy(3, 2);  printf("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■");

    for (i = 3; i < 48; i++)
    {
        gotoxy(3, i); printf("■");
        gotoxy(163, i); printf("■");
    }

    gotoxy(3, 48);  printf("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■");
}
void StartGame()        // 게임 시작 화면
{

    chcolor(WHITE);         // 글자 색을 흰 색으로 변경
    gotoxy(8, 5);  printf("            ■                 ■■    ■■■■■■■■         ■■             ■■■           ■■           ■■■■■■■■■■    ■■");
    gotoxy(8, 6);  printf("          ■■■               ■■    ■■■■■■■■         ■■           ■■  ■■         ■■           ■■■■■■■■■■    ■■");
    gotoxy(8, 7);  printf("        ■■  ■■             ■■                ■■   ■■■■■         ■■      ■■       ■■           ■■                    ■■    ");
    gotoxy(8, 8);  printf("      ■■      ■■     ■■■■■                ■■   ■■■■■       ■■          ■■     ■■           ■■■■■■■■■■    ■■");
    gotoxy(8, 9);  printf("    ■■          ■■   ■■■■■                ■■         ■■     ■■              ■■   ■■           ■■■■■■■■■■    ■■■■■■");
    gotoxy(8, 10); printf("  ■■              ■■       ■■                ■■   ■■■■■       ■■          ■■     ■■           ■■                    ■■■■■■");
    gotoxy(8, 11); printf("■■                  ■■     ■■                ■■   ■■■■■         ■■      ■■       ■■           ■■■■■■■■■■    ■■");
    gotoxy(8, 12); printf("                               ■■                ■■         ■■           ■■  ■■         ■■           ■■■■■■■■■■    ■■");
    gotoxy(8, 13); printf("                               ■■                             ■■             ■■■           ■■                                   ■■");
    gotoxy(8, 14); printf("                    ■■■                     ■■■■■■■■                                   ■■              ■■            ■■ ■■");
    gotoxy(8, 15); printf("                  ■■  ■■                   ■■■■■■■■                                   ■■              ■■            ■■              ");
    gotoxy(8, 16); printf("                ■■      ■■                             ■■           ■■■■■■■■■■■■■■              ■■            ■■              ");
    gotoxy(8, 17); printf("              ■■          ■■               ■■■■■■■■           ■■■■■■■■■■■■■■              ■■■■■■■■■■              ");
    gotoxy(8, 18); printf("            ■■              ■■             ■■■■■■■■                                   ■■              ■■■■■■■■■■               ");
    gotoxy(8, 19); printf("              ■■          ■■               ■■                                               ■■              ■■            ■■           ");
    gotoxy(8, 20); printf("                ■■      ■■                 ■■■■■■■■                                                     ■■            ■■                ");
    gotoxy(8, 20); printf("                  ■■  ■■                   ■■■■■■■■                                                     ■■■■■■■■■■                 ");
    gotoxy(8, 21); printf("                    ■■■                                                                                          ■■■■■■■■■■");

    gotoxy(60, 40); printf("-계속 진행하려면 [스페이스바]를 누르세요-");


}
void GameSelect()       // 게임 모드 선택
{

    chcolor(WHITE);         // 글자 색을 흰 색으로 변경
    gotoxy(8, 5);  printf("  ■■■■■■■■■■■■■■       ■■■■■■■■■■■■■■                   ■                ■■     ■■■■■■■■■■■■    ■■    ■■");
    gotoxy(8, 6);  printf("  ■■■■■■■■■■■■■■       ■■■■■■■■■■■■■■                 ■■■              ■■     ■■■■■■■■■■■■    ■■    ■■");
    gotoxy(8, 7);  printf("  ■■                    ■■       ■■                                       ■■  ■■            ■■     ■■                        ■■    ■■");
    gotoxy(8, 8);  printf("  ■■                    ■■       ■■                                     ■■      ■■    ■■■■■     ■■■■■■■■■■■■    ■■    ■■");
    gotoxy(8, 9);  printf("  ■■                    ■■       ■■                                   ■■          ■■  ■■■■■     ■■■■■■■■■■■■    ■■■■■■");
    gotoxy(8, 10); printf("  ■■                    ■■       ■■                                 ■■              ■■      ■■     ■■                        ■■■■■■");
    gotoxy(8, 11); printf("  ■■                    ■■       ■■                               ■■                  ■■    ■■     ■■■■■■■■■■■■    ■■    ■■");
    gotoxy(8, 12); printf("  ■■■■■■■■■■■■■■       ■■■■■■■■■■■■■■     ■■                      ■■  ■■     ■■■■■■■■■■■■    ■■    ■■");
    gotoxy(8, 13); printf("  ■■■■■■■■■■■■■■       ■■■■■■■■■■■■■■                                     ■■                                 ■■    ■■");
    gotoxy(8, 14); printf("              ■■                                                                ■■                ■■                                             ");
    gotoxy(8, 15); printf("              ■■                                                                ■■                                ■■■■■■■■■■■■   ");
    gotoxy(8, 16); printf("              ■■                                                                ■■                                ■■■■■■■■■■■■    ");
    gotoxy(8, 17); printf("              ■■                                                                ■■                                                    ■■");
    gotoxy(8, 18); printf("              ■■                                                                ■■                                                    ■■");
    gotoxy(8, 19); printf("              ■■                                                                ■■                                                    ■■");
    gotoxy(8, 20); printf("■■■■■■■■■■■■■■■■■  ■■■■■■■■■■■■■■■■              ■■■■■■■■■■■■■                              ■■");
    gotoxy(8, 21); printf("■■■■■■■■■■■■■■■■■  ■■■■■■■■■■■■■■■■              ■■■■■■■■■■■■■                              ■■");

    gotoxy(70, 30); printf("1. 게임 아이디 생성 후 게임 시작");
    gotoxy(70, 35); printf("2. 게임 이어서 하기");
    gotoxy(70, 40); printf("-[1] 또는 [2] 를 입력해주세요-\n");
}
void RedRain()
{
    int i;

    for (i = 4; i < 47; i++)        // 빨간 색을 비처럼 내리게 출력 후 화면 전환
    {
        chcolor(RED);
        gotoxy(5, i); printf("  ■■     ■■ ■■       ■■  ■■■     ■■■     ■■■     ■■  ■  ■■■    ■■  ■ ■■  ■    ■  ■■  ■■  ■■  ■■    ■■■  ■■  ■  ■");
        Sleep(100);
    }
    chcolor(WHITE);
}
int login(char id[], char pw[])             // 로그인 체크
{
    chcolor(WHITE);
    if (strcmp(id, member->id) == 0 && strcmp(pw, member->pw) == 0)
    {
        gotoxy(70, 25); printf("\n로그인이 완료 되었습니다!\n\n");
        return 2;
    }

    else
    {
        gotoxy(70, 25); printf("로그인에 실패하였습니다!\n\n");
        return 3;
    }
}
void story()
{
    char* str;
    chcolor(RED);
    gotoxy(70, 21); str = "2023년 4월 13일 목요일 성결대학교";
    for (int i = 0; i < strlen(str); i++)
    {
        if (i <= strlen(str))
        {
            printf("%c", *(str + i));
            Sleep(100);
        }
    }
    system("cls");
    GameSet();
    chcolor(RED);
    printf("\n\n");
    gotoxy(70, 21); str = "사건 시간 : 4월 10일 21시";
    for (int i = 0; i < strlen(str); i++)
    {
        printf("%c", *(str + i));
        Sleep(100);
    }
    printf("\n\n");
    system("cls");
    GameSet();
    chcolor(RED);
    gotoxy(70, 21); str = "사건 장소 : 재림관 1층";
    for (int i = 0; i < strlen(str); i++)
    {
        printf("%c", *(str + i));
        Sleep(100);
    }
    printf("\n");
    intro();
    drop();
    system("cls");
    GameSet();
    chcolor(RED);
    gotoxy(45, 21); str = "재림관 옥상에서 정보통신공학과 학우들의 의문의 단체자살 사건이 일어난다";
    for (int i = 0; i < strlen(str); i++)
    {
        printf("%c", *(str + i));
        Sleep(100);
    }
    printf("\n");

    _getch();
    system("cls");
    GameSet();
    chcolor(RED);
    gotoxy(45, 21); str = "죽은 사람은 총 3명으로 모두 옥상에서 떨어져 끔찍한 몰골로 죽었다.";
    for (int i = 0; i < strlen(str); i++)
    {
        printf("%c", *(str + i));
        Sleep(100);
    }
    printf("\n");

    _getch();
    system("cls");
    GameSet();
    chcolor(RED);
    gotoxy(45, 21); str = "그곳에는 너무 가혹한 프로그래밍언어(1) 수업으로 인하여 자살한다는 유서가 적혀 있었다.";
    for (int i = 0; i < strlen(str); i++)
    {
        printf("%c", *(str + i));
        Sleep(100);
    }
    printf("\n");
}
void intro()   // 게임 인트로 (재림관)
{
    chcolor(DARKGREEN);
    gotoxy(40, 20);  printf(" ▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣");
    gotoxy(40, 21);  printf(" ▣    □     □ † □□□□   □†        □  □ †  □□    □  †  □□□□□ ▣");
    gotoxy(40, 22);  printf(" ▣  □ □  □□ †      □  □□† □□□ □  □ †          □  †          □ ▣");
    gotoxy(40, 23);  printf(" ▣ □   □   □ †    □      □† □     □  □ †  □□    □□†          □ ▣");
    gotoxy(40, 24);  printf(" ▣              †          □□† □     □□□ † □  □   □  †          □ ▣");
    gotoxy(40, 25);  printf(" ▣      □□    †   □□□□ □† □     □  □ †  □□    □  †   □  □    ▣");
    gotoxy(40, 26);  printf(" ▣     □  □   †         □   † □□□ □  □ †              †   □  □    ▣");
    gotoxy(40, 27);  printf(" ▣      □□    †   □□□□   †        □  □ †   □□□□   † □□□□□  ▣");
    gotoxy(40, 28);  printf(" ▣              †   □         †               †         □   †             ▣");
    gotoxy(40, 29);  printf(" ▣              †   □□□□   †               †         □   †             ▣");
    gotoxy(40, 30);  printf(" ▣◈◈◈◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈▣");
    gotoxy(40, 31);  printf(" ▣■■■■■■■†■■■■■■■†■■■ ■■■■†■■■■■■■†■■■ ■■■▣");
    gotoxy(40, 32);  printf(" ▣◈◈◈◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈▣");
    gotoxy(40, 33);  printf(" ▣◈◈◈◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈▣");
    gotoxy(40, 34);  printf(" ▣■■■■■■■†■■■■■■■†■■■ ■■■■†■■■■■■■†■■■ ■■■▣");
    gotoxy(40, 35);  printf(" ▣□□▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒▒▒▒▒▒▒†▒▒▒ ▒▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒ □□▣");
    gotoxy(40, 36);  printf(" ▣□□▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒▒▒▒▒▒▒†▒▒▒ ▒▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒ □□▣");
    gotoxy(40, 37);  printf(" ▣□□▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒▒▒▒▒▒▒†▒▒▒ ▒▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒ □□▣");
    gotoxy(40, 38);  printf(" ▣□□▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒▒▒▒▒▒▒†▒▒▒ ▒▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒▒▒▒▒▒▒†▒▒▒▒▒▒▒▒ □□▣");
    gotoxy(40, 39);  printf(" ▣■■■■■■■†■■■■■■■†■■■ ■■■■†■■■■■■■†■■■ ■■■▣");
    gotoxy(40, 40);  printf(" ▣◈◈◈◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈▣");
    gotoxy(40, 41);  printf(" ▣◈◈◈◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈▣");
    gotoxy(40, 42);  printf(" ▣■■■■■■■†■■■■■■■†■■■ ■■■■†■■■■■■■†■■■ ■■■▣");
    gotoxy(40, 43);  printf(" ▣◈◈◈◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈▣");
    gotoxy(40, 44);  printf(" ▣◈◈◈◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈◈†◈◈◈◈◈◈◈†◈◈◈ ◈◈◈▣");
    gotoxy(40, 45);  printf(" ▣▩▩▩▩▩▩▩†▩▩▩▩▩▩▩†▩▩▩▩▩▩▩ †▩▩▩▩▩▩▩†▩▩▩ ▩▩▩▣");
    gotoxy(40, 46);  printf(" ▣▩▩▩▩▩▩▩†▩▩▩▩▩▩▩†▩▩      ▩▩ †▩▩▩▩▩▩▩†▩▩▩ ▩▩▩▣");
    gotoxy(40, 47);  printf(" ▣▩▩▩▩▩▩▩†▩▩▩▩▩▩▩†▩▩      ▩▩ †▩▩▩▩▩▩▩†▩▩▩ ▩▩▩▣");
    gotoxy(40, 47);  printf(" ▣▩▩▩▩▩▩▩†▩▩▩▩▩▩▩†▩▩      ▩▩ †▩▩▩▩▩▩▩†▩▩▩ ▩▩▩▣");
    chcolor(BLUE);
    gotoxy(43, 21);  printf("    □     □ † □□□□   □†        □  □ †  □□    □  †  □□□□□");
    gotoxy(43, 22);  printf("  □ □  □□ †      □  □□† □□□ □  □ †          □  †          □");
    gotoxy(43, 23);  printf(" □   □   □ †    □      □† □     □  □ †  □□    □□†          □");
    gotoxy(43, 24);  printf("              †          □□† □     □□□ † □  □   □  †          □");
    gotoxy(43, 25);  printf("      □□    †   □□□□ □† □     □  □ †  □□    □  †   □  □   ");
    gotoxy(43, 26);  printf("     □  □   †         □   † □□□ □  □ †              †   □  □   ");
    gotoxy(43, 27);  printf("      □□    †   □□□□   †        □  □ †   □□□□   † □□□□□ ");
    gotoxy(43, 28);  printf("              †   □         †               †         □   †            ");
    gotoxy(43, 29);  printf("              †   □□□□   †               †         □   †            ");
    chcolor(DARKBLUE);
    gotoxy(42, 31);  printf(" ■■■■■■■†■■■■■■■†■■■ ■■■■†■■■■■■■†■■■ ■■■");
    gotoxy(42, 34);  printf(" ■■■■■■■†■■■■■■■†■■■ ■■■■†■■■■■■■†■■■ ■■■");
    gotoxy(42, 39);  printf(" ■■■■■■■†■■■■■■■†■■■ ■■■■†■■■■■■■†■■■ ■■■");
    gotoxy(42, 42);  printf(" ■■■■■■■†■■■■■■■†■■■ ■■■■†■■■■■■■†■■■ ■■■");
}
void game1()
{
    int cnt = 0;

    int x = 0, y = 0;
    char keydown;
    while (1)
    {
        if (gameover(y, x))
        {
            cnt = 0;
        }
        //player(y);     // 케릭터 초기 위치 40
        if (_kbhit())   // 키보드를 눌렀는지 확인 , 눌렀으면 참, 안 눌렀으면 거짓
        {
            keydown = _getch();
            if (keydown == Space)       // 누른 키가 스페이스바일 경우 점프, 다른 키일 경우 변화 x
            {
                while (1)           // 플레이어 상승
                {
                    GameSet();
                    chcolor(DARKGRAY);
                    gmaec9();
                    stairs(x);
                    if (x != 37)       // 장애물 출력
                    {
                        x++;
                    }
                    else
                        x = 0;

                    player(y);
                    y--;
                    Sleep(10);
                    system("cls");
                    if (y == -12)
                        break;
                }

                while (1)       // 플레이어 하강
                {

                    GameSet();
                    chcolor(DARKGRAY);
                    gmaec9();
                    stairs(x);
                    if (x != 37)       // 장애물 관련
                    {
                        x++;
                    }
                    else
                        x = 0;

                    player(y);
                    Sleep(10);
                    system("cls");
                    y++;
                    if (y == 0)
                        break;
                }

            }
        }
        if (x != 37)       // 장애물 관련
        {
            x++;
        }
        else
            x = 0;

        chcolor(WHITE);
        gotoxy(140, 5); printf("200달성시 게임 클리어");
        gotoxy(140, 6); printf("현재 내 점수 : %d", cnt++);
        chcolor(DARKGRAY);
        gmaec9();
        if (cnt == 200)     // cnt가 200이 되면 게임 클리어
        {
            break;
        }
        GameSet();
        player(y);
        stairs(x);
        Sleep(10);
        system("cls");
    }
    system("cls");      // 게임 클리어시 여기로 빠져나옴
    GameSet();
    gotoxy(20, 20); printf("여기에 내용 이어서,,,");
}
int gameover(int player, int stairs)
{
    if (player <= 0 && player >= -7 && stairs >= 25 && stairs <= 37)      // 플레이어와 장애물의 충돌 범위 설정
    {
        return TRUE;
    }

    return FALSE;
}
void player(int y)      // 캐릭터 그리기
{
    chcolor(DARKGRAY);
    gotoxy(12, 30 + y); printf("     $$$$$$ \n");
    gotoxy(12, 31 + y); printf("    $//////$ \n");
    chcolor(WHITE);
    gotoxy(12, 32 + y); printf("   (|◎  ◎|)  \n");
    gotoxy(12, 33 + y); printf("    ＼ ⌒  /  \n");
    gotoxy(12, 34 + y); printf("     ￣||￣ \n");
    chcolor(SKYBLUE);
    gotoxy(12, 35 + y); printf("  /￣  */￣￣|＼\n");
    gotoxy(12, 36 + y); printf(" /|    /     | | \n");
    gotoxy(12, 37 + y); printf("＼|   /*     | |\n");
    gotoxy(12, 38 + y); printf("  |＼/ *     |/\n");
    gotoxy(12, 39 + y); printf("  |  ＼*    /|\n");
    chcolor(DARKGRAY);
    gotoxy(12, 40 + y); printf("  |￣￣￣￣￣| \n");
    gotoxy(12, 41 + y); printf("  |    /＼   |\n");
    gotoxy(12, 42 + y); printf("  |   |  |   |\n");
    gotoxy(12, 43 + y); printf("  |   |  |   |\n");
    gotoxy(12, 44 + y); printf("  |   |  |   |\n");
    gotoxy(12, 45 + y); printf("  |￣￣| |￣￣|\n");
    gotoxy(12, 46 + y); printf("  |§  ▶|§  ▶\n");
    gotoxy(12, 47 + y); printf("   ￣￣   ￣￣\n");
}
void stairs(int x)      // 장애물 출력
{
    chcolor(DARKGRAY);
    gotoxy(45 - x, 43); printf("        ■");
    gotoxy(45 - x, 44); printf("      ■■");
    gotoxy(45 - x, 45); printf("    ■■■");
    gotoxy(45 - x, 46); printf("  ■■■■");
    gotoxy(45 - x, 47); printf("■■■■■");
}
void drop()     // 재림관에서 3명의 자살 사건
{
    int i = 0;
    chcolor(WHITE);

    Sleep(200);
    chcolor(GRAY);
    gotoxy(88, 20); printf("옷");
    gotoxy(86, 20); printf("옷");
    gotoxy(84, 20); printf("옷");


    while (1)
    {
        system("cls");
        GameSet();
        intro();
        chcolor(RED);
        gotoxy(88, 20 + i); printf("옷");
        gotoxy(86, 20 + i); printf("옷");
        gotoxy(84, 20 + i); printf("옷");

        Sleep(200);

        i++;
        if (i == 27)
            break;
    }
    system("cls");
    GameSet();
    intro();

    chcolor(RED);
    gotoxy(91, 41); printf("▦");
    gotoxy(90, 42); printf("▦▦");
    gotoxy(89, 43); printf("▦▦▦");
    gotoxy(88, 44); printf("▦▦▦▦");
    gotoxy(87, 45); printf("▦▦▦▦▦");
    gotoxy(86, 46); printf("▦▦▦▦▦▦");
    gotoxy(85, 47); printf("▦▦▦▦▦▦▦");

    Sleep(200);
    chcolor(WHITE);
}
void story2()
{
    _getch();
    system("cls");
    GameSet();
    gamec2();
    chcolor(WHITE);
    gotoxy(45, 40); printf("현재\n");
    gotoxy(45, 41); printf("(형사) : 학생들이 프로그래밍언어(1) 수업에서\n");
    gotoxy(45, 42); printf("(형사) : 스트레스를 너무 많이 받아서 같이 자살을 도모했다더군\n");
    gotoxy(45, 43); printf("(형사) : 너도 그 수업을 수강하고 있지? \n");
    gotoxy(45, 44); printf("(형사) : 어때? 그 정도로 심했니?\n\n\n\n");

    _getch();
    system("cls");
    GameSet();
    gamec2();
    gamec3();
    chcolor(RED);
    gotoxy(45, 40); printf("(%s) : 아... 교수님들이 많이 심하시긴 하셨어요.....\n", member->user);
    gotoxy(45, 41); printf("매일 같이 과제에...실습에...팀플까지!\n");
    gotoxy(45, 42); printf("모두가 힘들어 했어요...\n\n\n\n");

    _getch();
    system("cls");
    GameSet();
    gamec2();
    gamec3();
    chcolor(WHITE);
    gotoxy(45, 40); printf("(형사) : 그래? 너는 떨어진 3명과 같은 팀플 조원이더군,\n");
    gotoxy(45, 41); printf("(형사) : 혹시 팀플에서는 아무런 문제가 없었니?\n\n\n\n");

    _getch();
    system("cls");
    GameSet();
    gamec2();
    gamec3();
    chcolor(RED);
    gotoxy(45, 40); printf("(%s) : 서로 항상 너무 많은 과제를 내주시는 교수님에 대해 안좋게 말을 했어요...\n", member->user);
    gotoxy(45, 41); printf("(%s) : 저희는 잘못이 없다면서 말이죠...\n\n\n\n", member->user);

    _getch();
    system("cls");
    GameSet();
    gamec2();
    gamec3();
    chcolor(WHITE);
    gotoxy(45, 40); printf("(형사) : 음.., 그렇구나 교수님들께서는 절대 그렇지 않다고들 말씀하시던데???\n");
    gotoxy(45, 41); printf("(형사) : 오히려 너가 팀플에서 마음대로 행동해서 그 친구들이 힘들어 했다더구나.\n\n\n\n");

    _getch();
    system("cls");
    GameSet();
    gamec2();
    gamec3();
    chcolor(RED);
    gotoxy(45, 40); printf("(%s) : 아니예요! 저는 정말 항상 최선을 다했어요!!!\n", member->user);
    gotoxy(45, 41); printf("(%s) : 믿어주세요!!!\n\n\n\n", member->user);

    _getch();
    system("cls");
    GameSet();
    gamec2();
    gamec3();
    chcolor(WHITE);
    gotoxy(45, 40); printf("(형사) : 그럼 교수님들과 한번 상담을 해보겠니?\n");
    gotoxy(45, 41); printf("(형사) : 그러고 나서 만든 상담일지를 나에게 가져다주렴.\n\n\n\n");

    _getch();
    system("cls");
    GameSet();
    gamec2();
    gamec3();
    chcolor(RED);
    gotoxy(45, 40); printf("(%s) : 후...알겠어요!\n", member->user);
    gotoxy(45, 41); printf("(%s) : 하지만 진짜 저 때문이 아니에요! 믿어주세요!\n\n\n\n", member->user);

    RedRain();
    _getch();
    system("cls");
    GameSet();
    chcolor(WHITE);
    gotoxy(20, 20); printf("\t\t\t\t\t\t\t1층 교수님을 만나러가는 계단\n\n");
    chcolor(RED);
    gotoxy(25, 21); printf("\t\t\t\t\t\t\tstrat!\n\n");
    _getch();
}
void make_username()       // 닉네임 만드는 함수
{
    char uname[100] = { "" };             // 닉네임을 임시 저장할 포인터 변수
    char s;                               // 입력한 키를 받을 변수
    int k = 0;                            // 닉네임이 소문자로만 이루어져있을때 주는 키 값

    chcolor(RED);
    gotoxy(60, 20); printf("억울한 누명을 해결하겠습니까?(Y or N)\n");
    s = _getch();                         // 키를 입력 받고 s변수에 저장
    if (s == 'y' || s == 'Y')
    {
        system("cls");
        GameSet();
        chcolor(RED);
        gotoxy(60, 18); printf("<주의사항>\n\n");
        gotoxy(60, 19);    printf("-이름은 소문자만 사용가능.\n");
        gotoxy(60, 20);    printf("-이름은 10글자 내외로 설정합니다.\n\n");
    user:
        chcolor(WHITE);
        gotoxy(60, 22);   printf("학생의 이름을 설정하십시오 : ");
        scanf_s("%s", uname, sizeof(uname));

        if ((int)strlen(uname) > 10)              // 설정한 이름의 길이가 10보다 큰 지 확인
        {
            chcolor(RED);
            gotoxy(60, 23); printf("이름의 길이가 10글자가 넘습니다.\n\n");
            goto user;
        }

        for (i = 0; i < strlen(uname); i++)       // 설정한 이름의 길이 만큼 for문 
        {
            if ((int)islower(*(uname + i)) == 0)    // 설정한 이름의 인덱스를 하나하나 조사하여 소문자인지 확인, 소문자가 아닌 경우 0을 반환
            {
                chcolor(RED);
                gotoxy(60, 24); printf("이름은 영문 소문자로만 가능합니다.\n\n");
                goto user;
            }
        }

        for (i = 0; i < strlen(uname); i++)
        {
            if ((int)islower(*(uname + i)) != 0)
            {
                k = 789;           // 소문자로만 이루어져 있을때 키을 지정.
            }
        }
        if ((int)strlen(uname) <= 10)
        {
            if (k == 789)
            {
                system("cls");
                GameSet();
                chcolor(WHITE);
                s = _getch();
                if (s == 'Y' || s == 'y')
                {
                    strcpy_s(member->user, sizeof(member->user), uname);      // str값을 구초제 member.user에 저장
                    gotoxy(60, 23);   printf("\"%s\"으로 닉네임이 설정되었습니다.\n\n", member->user);
                    gotoxy(60, 24);   printf("사건 현장으로 되돌아갑니다.\n");
                }
            }
        }
    }
    else if (s == 'N' || s == 'n')
    {
        gotoxy(60, 23);    printf("무기징역을 선고합니다. 게임하지마세요~ >_<\n");
        //fclose(fp);
        exit(1);
    }
}
int way[15][79] =   // 복도, 1은 벽. 9는 복도의 끝지점, 2는 캐릭터, 8은 힌트주는 캐릭터, 3은 힌트 주변 도착시 힌트 제공할 수 있도록 만듦
{
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9},
    {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,7,8,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9},
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},

};
void drawway()      // 복도를 그리는 함수
{
    int i, j, y = 18, k = 0;

    for (i = 0; i < 15; i++)
    {
        gotoxy(5, y++);

        for (j = 0; j < 79; j++)
        {
            chcolor(SKYBLUE);
            k = way[i][j];

            switch (k)
            {
            case 0:
                printf("  ");
                break;
            case 1:
                printf("▤");
                break;
            case 2:
                chcolor(WHITE);
                printf("옷");
                break;
            case 3:
                printf("  ");
                break;
            case 7:
                chcolor(RED);
                printf("OT");
                break;
            case 8:
                chcolor(RED);
                printf("L ");
                break;

            case 9:
                chcolor(YELLOW);
                printf("▦");
                break;
            }
        }
    }
}
void moveway()      // 복도에서 캐릭터가 움직이도록 만들어줌
{
    int site;
    int x = 5, y = 0;       // 처음 캐릭터의 위치

    while (1)           // 미로 게임과 원리가 같다
    {
        drawway();
        site = _getch();

        switch (site)
        {
        case 224:

            site = _getch();

            switch (site)       // 이동 가능한 곳이면 플레이어를 움직이고, 이전에 있던 곳은 0으로 바꿔준다.
            {
            case RIGHT:
                y++;
                if (way[x][y] == 0)   // 이동할 수 있는 좌표
                {
                    way[x][y] = 2;
                    way[x][y - 1] = 0;

                }
                else if (way[x][y] == 3)    // 3에 도착하면 3,7,8을 0으로 바꿔준다.
                {
                    way[13][49] = 0;
                    way[13][50] = 0;
                    way[13][48] = 0;
                    way[12][49] = 0;
                    way[12][50] = 0;
                    way[13][51] = 0;

                    way[x][y - 1] = 0;

                    way[x][y] = 2;
                    system("cls");
                    drawway();
                    chcolor(WHITE); gotoxy(10, 34); printf("K: 야 안녕...? 문형진교수님 과목에 필요한 표준 입출력 함수, 변수와 자료형을 자료조사하면 될거야! ");
                    chcolor(RED); gotoxy(10, 36); printf("어...? 안녕? 너는 어떻게 여기 있는거야? ");

                    chcolor(WHITE); gotoxy(10, 38); printf("k: printf(), scanf_s()부분이랑 아스키코드에 대해 잘 조사해봐 그럼 통과할 수 있을꺼야  ");
                    chcolor(RED); gotoxy(10, 40); printf("너가 어떻게 여기 있는거냐고!! 너는 죽었잖아.... ");

                    chcolor(WHITE); gotoxy(10, 42); printf("k: 아 안녕...? 문형진교수님 과목에 필요한 표준 입출력 함수, 변수와 자료형을 자료조사하면 될거야!  ");
                    chcolor(RED); gotoxy(10, 44); printf("알겠어... 고마워 ");
                }
                else if (way[x][y] == 1)  // 이동할 수 없는 좌표
                {
                    y--;
                }
                break;
            case LEFT:
                y--;
                if (y == -1)
                {
                    y++;
                    continue;
                }
                else if (way[x][y] == 0)
                {
                    way[x][y] = 2;
                    way[x][y + 1] = 0;
                }
                else if (way[x][y] == 3)
                {
                    way[13][49] = 0;
                    way[13][50] = 0;
                    way[13][48] = 0;
                    way[12][49] = 0;
                    way[12][50] = 0;
                    way[13][51] = 0;

                    way[x][y + 1] = 0;

                    way[x][y] = 2;
                    system("cls");
                    drawway();
                    chcolor(WHITE); gotoxy(10, 34); printf("K: 야 안녕...? 문형진교수님 과목에 필요한 표준 입출력 함수, 변수와 자료형을 자료조사하면 될거야! ");
                    chcolor(RED); gotoxy(10, 36); printf("어...? 안녕? 너는 어떻게 여기 있는거야? ");

                    chcolor(WHITE); gotoxy(10, 38); printf("k: printf(), scanf_s()부분이랑 아스키코드에 대해 잘 조사해봐 그럼 통과할 수 있을꺼야  ");
                    chcolor(RED); gotoxy(10, 40); printf("너가 어떻게 여기 있는거냐고!! 너는 죽었잖아.... ");

                    chcolor(WHITE); gotoxy(10, 42); printf("k: 아 안녕...? 문형진교수님 과목에 필요한 표준 입출력 함수, 변수와 자료형을 자료조사하면 될거야!  ");
                    chcolor(RED); gotoxy(10, 44); printf("알겠어... 고마워 ");
                }
                else if (way[x][y] == 1)
                {
                    y++;
                }
                break;
            case UP:
                x--;
                if (x == -1)    // 2차원 배열에서 -1값이 나올 순 없으므로, -1이 나오면 건너뛰고 진행하도록 설정
                {
                    x++;
                    continue;
                }
                else if (way[x][y] == 0)
                {
                    way[x][y] = 2;
                    way[x + 1][y] = 0;
                }
                else if (way[x][y] == 3)
                {
                    way[13][49] = 0;
                    way[13][50] = 0;
                    way[13][48] = 0;
                    way[12][49] = 0;
                    way[12][50] = 0;
                    way[13][51] = 0;

                    way[x + 1][y] = 0;

                    way[x][y] = 2;
                    system("cls");
                    drawway();
                    chcolor(WHITE); gotoxy(10, 34); printf("K: 야 안녕...? 문형진교수님 과목에 필요한 표준 입출력 함수, 변수와 자료형을 자료조사하면 될거야! ");
                    chcolor(RED); gotoxy(10, 36); printf("어...? 안녕? 너는 어떻게 여기 있는거야? ");

                    chcolor(WHITE); gotoxy(10, 38); printf("k: printf(), scanf_s()부분이랑 아스키코드에 대해 잘 조사해봐 그럼 통과할 수 있을꺼야  ");
                    chcolor(RED); gotoxy(10, 40); printf("너가 어떻게 여기 있는거냐고!! 너는 죽었잖아.... ");

                    chcolor(WHITE); gotoxy(10, 42); printf("k: 아 안녕...? 문형진교수님 과목에 필요한 표준 입출력 함수, 변수와 자료형을 자료조사하면 될거야!  ");
                    chcolor(RED); gotoxy(10, 44); printf("알겠어... 고마워 ");
                }
                else if (way[x][y] == 1)
                {
                    x++;
                }
                break;
            case DOWN:
                x++;
                if (way[x][y] == 0)
                {
                    way[x][y] = 2;
                    way[x - 1][y] = 0;
                }
                else if (way[x][y] == 3)
                {
                    way[13][49] = 0;
                    way[13][50] = 0;
                    way[13][48] = 0;
                    way[12][49] = 0;
                    way[12][50] = 0;
                    way[13][51] = 0;

                    way[x - 1][y] = 0;

                    way[x][y] = 2;
                    system("cls");
                    drawway();
                    chcolor(WHITE); gotoxy(10, 34); printf("K: 야 안녕...? 문형진교수님 과목에 필요한 표준 입출력 함수, 변수와 자료형을 자료조사하면 될거야! ");
                    chcolor(RED); gotoxy(10, 36); printf("어...? 안녕? 너는 어떻게 여기 있는거야? ");

                    chcolor(WHITE); gotoxy(10, 38); printf("k: printf(), scanf_s()부분이랑 아스키코드에 대해 잘 조사해봐 그럼 통과할 수 있을꺼야  ");
                    chcolor(RED); gotoxy(10, 40); printf("너가 어떻게 여기 있는거냐고!! 너는 죽었잖아.... ");

                    chcolor(WHITE); gotoxy(10, 42); printf("k: 아 안녕...? 문형진교수님 과목에 필요한 표준 입출력 함수, 변수와 자료형을 자료조사하면 될거야!  ");
                    chcolor(RED); gotoxy(10, 44); printf("알겠어... 고마워 ");
                }
                else if (way[x][y] == 1)
                {
                    x--;
                }
                break;
            }
        }
        if (way[x][y] == 9)        // 플레이어가 종점에 도착했을 경우
        {
            way[x][y] = 2;
            system("cls");
            GameSet();

            way[x - 1][y] = 0;
            //chcolor(WHITE); gotoxy(20, 10); printf("게임 끝");
            break;
        }
    }
    way[13][49] = 7;
    way[13][50] = 8;
    way[13][48] = 3;
    way[12][49] = 3;
    way[12][50] = 3;
    way[13][51] = 3;

    way[1][78] = 9;
    way[2][78] = 9;
    way[4][78] = 9;
    way[5][78] = 9;
    way[6][78] = 9;
    way[7][78] = 9;
    way[8][78] = 9;
    way[9][78] = 9;
    way[10][78] = 9;
    way[11][78] = 9;
    way[12][78] = 9;
    way[13][78] = 9;
    way[14][78] = 9;

    way[1][77] = 0;
    way[2][77] = 0;
    way[4][77] = 0;
    way[5][77] = 0;
    way[6][77] = 0;
    way[7][77] = 0;
    way[8][77] = 0;
    way[9][77] = 0;
    way[10][77] = 0;
    way[11][77] = 0;
    way[12][77] = 0;
    way[13][77] = 0;


}
void WalkWay()      // 복도벽에 써있는 글씨
{
    chcolor(RED);      //복도 위쪽 벽
    gotoxy(35, 5);  printf("■            ■     ■■■■■■■■     ■                   ■                        ■");
    gotoxy(35, 6);  printf("■            ■     ■                   ■                   ■                      ■  ■");
    gotoxy(35, 7);  printf("■            ■     ■                   ■                   ■                    ■      ■ ");
    gotoxy(35, 8);  printf("■            ■     ■                   ■                   ■                  ■          ■");
    gotoxy(35, 9);  printf("■            ■     ■                   ■                   ■                ■              ■     ");
    gotoxy(35, 10); printf("■■■■■■■■     ■■■■■■■■     ■                   ■              ■                  ■");
    gotoxy(35, 11); printf("■            ■     ■                   ■                   ■                ■              ■");
    gotoxy(35, 12); printf("■            ■     ■                   ■                   ■                  ■          ■");
    gotoxy(35, 13); printf("■            ■     ■                   ■                   ■                    ■      ■");
    gotoxy(35, 14); printf("■            ■     ■                   ■                   ■                      ■  ■");
    gotoxy(35, 15); printf("■            ■     ■■■■■■■■     ■■■■■■■■     ■■■■■■■            ■");

    chcolor(RED);      //복도 아래 벽에 써있는 글씨
    gotoxy(35, 36); printf("■■■                   ■■■       ■■■            ■■■■        ■              ■■■■");
    gotoxy(35, 37); printf("  ■                       ■       ■      ■          ■     ■       ■              ■      ■");
    gotoxy(35, 38); printf("   ■                     ■      ■          ■        ■      ■      ■              ■       ■  ");
    gotoxy(35, 39); printf("    ■                   ■     ■              ■      ■     ■       ■              ■        ■");
    gotoxy(35, 40); printf("     ■                 ■    ■                  ■    ■■■■        ■              ■         ■");
    gotoxy(35, 41); printf("      ■      ■       ■     ■                  ■    ■     ■       ■              ■         ■");
    gotoxy(35, 42); printf("       ■    ■■     ■        ■              ■      ■      ■      ■              ■        ■");
    gotoxy(35, 43); printf("        ■  ■  ■  ■            ■          ■        ■       ■     ■              ■       ■");
    gotoxy(35, 44); printf("         ■■    ■■               ■      ■          ■        ■    ■              ■      ■ ");
    gotoxy(35, 45); printf("          ■      ■                  ■■■            ■         ■   ■■■■■■    ■■■■");
}
void room()     // 사무실 꾸미기 
{
    int i;

    chcolor(WHITE);
    gotoxy(5, 3); printf("사무실");        // 현재 있는 장소 표시
    gamec5();
    gamec1();
    gotoxy(5, 35);              // 문제를 출제할 공간
    for (i = 0; i < 79; i++)
    {
        chcolor(WHITE); printf("■");
    }

}

void story3()
{

    _getch();
    chcolor(WHITE);
    gotoxy(45, 40); printf("(%s) : 똑똑똑 안녕하세요 교수님 저 (%s)입니다. 들어가도 되겠습니까??\n", member->user, member->user);
    gotoxy(45, 42); printf("(문형진 교수) - 어 그래그래 들어와라 .\n\n\n\n");

    _getch();
    system("cls");
    GameSet();
    gotoxy(5, 35);
    for (i = 0; i < 79; i++)
    {
        chcolor(WHITE); printf("■");
    }
    gotoxy(5, 3); printf("사무실");        // 현재 있는 장소 표시
    chcolor(WHITE);
    gamec5();
    gamec1();
    gotoxy(25, 40); printf("(%s) : 안녕하세요 교수님 형사님께서 상담을 받고 오시라고 하셔서요 \n", member->user);
    gotoxy(25, 42); printf("문형진 교수 : 그래 나도 들었다. 너가 생각하기에는  우리가 너무 과제를 많이 내줘서 아이들이 스트레스를 많이 받았다는거니? \n\n");

    _getch();
    system("cls");
    GameSet();
    gotoxy(5, 35);
    for (i = 0; i < 79; i++)
    {
        chcolor(WHITE); printf("■");
    }
    gotoxy(5, 3); printf("사무실");        // 현재 있는 장소 표시
    chcolor(WHITE);
    gamec5();
    gamec1();
    chcolor(WHITE);
    gotoxy(5, 40); printf("(%s) : 네 이런 말씀 드리기에는 굉장히 힘들지만 애들이 많이 힘들어 했어요... 교수님들이 내는 과제를 매주 수행하려다 보니 시간이\n", member->user);
    gotoxy(5, 41); printf("(%s) : 항상 없었다고 얘들이 말했어요.\n", member->user);
    gotoxy(5, 43); printf("(문형진 교수) : 내가 알기로는 너가 재대로 C언어를 공부하지 않아서 아이들이 힘들다고 하는 말을 들었었는데? 그것에 대해서는 어떻게 생각하니? ");

    _getch();
    system("cls");
    GameSet();
    gotoxy(5, 35);
    for (i = 0; i < 79; i++)
    {
        chcolor(WHITE); printf("■");
    }
    gotoxy(5, 3); printf("사무실");        // 현재 있는 장소 표시
    chcolor(WHITE);
    gamec5();
    gamec1();
    chcolor(WHITE);
    gotoxy(5, 40); printf("(%s) : 네? 그것은 모함이예요! 정말로 전 항상 친구들과 함께 열심히 과제를 수행했어요! ", member->user);
    gotoxy(5, 42); printf("(문형진 교수) : 그래? 그럼 그걸 증명할 수 있겠니? 너가 만약 C언어에 대해 잘 알고 있다면 내가 상담일지에 열심히 팀플을 참여했다고 인정해주마");

    _getch();
    system("cls");
    GameSet();
    gotoxy(5, 35);
    for (i = 0; i < 79; i++)
    {
        chcolor(WHITE); printf("■");
    }
    gotoxy(5, 3); printf("사무실");        // 현재 있는 장소 표시
    chcolor(WHITE);
    gamec5();
    gamec1();
    chcolor(WHITE);
    gotoxy(5, 40); printf("(%s) : 네! 좋아요!", member->user);
    gotoxy(5, 42); printf("(문형진 교수) : 그래 문제를 20문제 낼테니 15문제이상 맞추면 인정해주마");
}

void Qu()
{
    int input, pass = 0, cnt = 0;   // input으로 정답 입력, pass로 정답 개수 확인, cnt로 현재 문제 번호 출력

    int i, j, r = 0;

    int rquiz[20] = { '\0' };       // 인덱스 0 ~ 19까지 중복되지 않는 랜덤 값 저장


    Q mun1[30] = {                                                     // 문제를 구조체로 만듦
        {"문제 : 헤더 파일은 특정 작업을 수행하기 위한 ( ) 목록입니다.", "1.소스 코드  2번.선행처리기  3.주석문  4.함수  5.텍스트", '4'},
        {"문제 : printf()함수와 scanf_s() 함수를 사용하려면 ( ) 헤더파일이 필요하다.", "1번.stdio.h  2번.stdlib.h  3번.string.h  4번.time.h  5번.conio.h", '1'},
        {"문제 : 강제 개행 문자로 알맞은 것은?", "1.\\t  2.\\b  3.\\f  4.\\n  5.\\r", '4'},
        {"문제 : 프로그램 소스코드에서 가장 먼저 수행해야한다는 의미를 가진 선행처리 지시자는?", "1.%  2.&  3.->  4.#  5.*", '4'},
        {"문제 : 소스 코드에서 명령문 구간을 정의할 때 사용하는 기호는?", "1.()  2.[]  3.< > 4.{}  5.<()>", '4'},
        {"문제 : 다음중 정수형의 출력 형식 지정자가 아닌 것은?", "1.%d  2.%o  3.%x  4.%f  5.%u", '4'},
        {"문제 : 다음중 문자열의 출력형식 지정자로 알맞은 것은?", "1.%d  2.%f  3.%x  4.%s  5.%c", '4'},
        {"문제 : 123.45를 %d로 출력했을 때 알맞은 값은?", "1.123.4  2.123.  3.123.45  4.123  5.123.450000", '4'},
        {"문제 : 123.45를 %.1f로 출력했을 때 알맞은 값은?", "1.123  2.123.  3.123.45  4.123.4  5.123.40", '4'},
        {"문제 : 123을 %05d로 출력했을 때 알맞은 값은?", "1.12300  2.01230  3.  123  4.00123  5.123", '4'},

        {"문제 : scanf_s() 사용시 값을 입력 받기 위해 사용해야하는 연산자는?", "1.!  2.#  3.%  4.&  5.*", '4'},
        {"문제 : 표준 입력 형식 지정자에서 정수형은 ( )를 사용한다.", "1.%f  2.%c  3.%s  4.%d  5.%x", '4'},
        {"문제 : 표준 입력 형식 지정자에서 실수형은 ( )를 사용한다.", "1.%d  2.%c  3.%s  4.%f  5.%p", '4'},
        {"문제 : 표준 입력 형식 지정자에서 문자형은 ( )를 사용한다.", "1.%d  2.%f  3.%s  4.%c  5.%o", '4'},
        {"문제 : 표준 입력 형식 지정자에서 면자열은 ( )를 사용한다.", "1.%d  2.%f  3.%c  4.%s  5.%x", '4'},
        {"문제 : 문자 0의 아스키코드 값은?", "1.65  2.97  3.57  4.48  5.90", '4'},
        {"문제 : 문자 A의 아스키코드 값은?", "1.48  2.97  3.90  4.65  5.122", '4'},
        {"문제 : 문자 a의 아스키코드 값은?", "1.48  2.65  3.90  4.97  5.89", '4'},
        {"문제 : C언어에서 사용할 수 있는 아스키코드값의 유효 범위는?", "1.1 ~ 128  2.0 ~ 128  3.1~ 129  4.0 ~ 127  5.0~256", '4'},
        {"문제 : a = 8.123456일 때 출력문에서 %05.2f로 선언하여 출력할 경우 결과 값은?", "1.8.12345  2.8.1234  3.8.12  4.08.12  5.08.123", '4'},

        {"문제 : int a = 5로 선언할 때 변수 a에 할당디는 메모리의 크기는?", "1.2바이트  2.8바이트  3.16바이트  4.4바이트  5.32바이트", '4'},
        {"문제 : 변수명 = 조건식 ? 식1 : 식2는 무슨 연산자인가?", "1.비트 연산자  2.시프트 연산자  3.논리 연산자  4.조건 연산자  5.관계 연산자", '4'},
        {"문제 : 나머지를 구하는 연산자는?", "1./  2.//  3.&  4.%  5.*", '4'},
        {"문제 : 제시한 조건의 참과 거짓 판별에 따라 서로 다른 명령을 적용하는 것은?", "1.if문  2.switch문  3.break문  4.if~else문  5.while 문", '4'},
        {"문제 : 반복 횟수를 알고 있을 때 사용하는 반복문은?", "1.while문  2.do ~ while문  3.switch문  4.for문  5.if문", '4'},
        {"문제 : 반복 횟수를 모를 때 사용하는 반복문은?", "1.for문  2.if ~ else문  3.switch문  4.while문  5.if문", '4'},
        {"문제 : 반복문을 무한 루프로 정의하려면?", "1.초깃값 1선언  2.초깃값 0선언  3.증감값 0선언  4.조건식 1선언  5.조건식 0선언", '4'},
        {"문제 : 난수 발생 함수를 사용하기 위해 가져오는 헤더 파일은?", "1.stdio.h  2.conio.h  3.math.h  4.stdlib.h  5.string.h", '4'},
        {"문제 : double형의 자료형의 크기는?", "1.4바이트  2.16바이트  3.2바이트  4.8바이트  5.32바이트", '4'},
        {"문제 : char형의 자료형의 크기는?", "1.2바이트  2.8바이트  3.4바이트  4.1바이트  5.16바이트", '4'},
    };

    srand((unsigned)time(NULL));

    for (i = 0; i < 20; i++)        // 문제 순서 랜덤으로 설정
    {
    again:
        r = rand() % 30;

        for (j = 0; j <= i - 1; j++)
        {
            if (r == rquiz[j])
                goto again;
        }
        rquiz[i] = r;
    }

    i = 0;

    while (1)       // 문제 풀기 시작
    {
        system("cls");
        GameSet();

        chcolor(WHITE);
        room();
        cnt++;

        gotoxy(20, 37); printf("%s", mun1[rquiz[i]].question);
        gotoxy(22, 39); printf("%s", mun1[rquiz[i]].ex);

        gotoxy(70, 45); printf("-정답은 숫자키 누르기-");


        gotoxy(133, 38); printf("맞춘 개수 / 전체 개수: %d / 20", pass);
        gotoxy(133, 40); printf("현재문제 번호 : %2d / 20", cnt);

        input = _getch();
        if (input == mun1[rquiz[i]].check)
            pass = pass + 1;                   // 정답 맞추면 1증가시켜줌

        i++;
        if (cnt == 20)      // 문제 개수가 20개일 경우
        {
            if (pass >= 15)     // 정답이 15개 이상이면 통과
                break;
            else                // 그렇지 않으면 문제 순서 랜덤 설정 다시하고, 번호, 정답 개수 초기화
            {
                for (i = 0; i < 20; i++)
                {
                    rquiz[i] = rand() % 20;

                    if (i > 1)
                    {
                        for (j = 0; j < i; j++)
                        {
                            if (rquiz[i] == rquiz[j])
                            {
                                i--;
                                break;
                            }
                        }
                    }
                }
                i = 0;
                cnt = 0;
                pass = 0;
            }
        }

    }

}

int map[45][63] =      // 미로 설정,  캐릭터 시작 위치는 9, 종점은 10.
{
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
    {9,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,1,1},
    {1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,1,0,1,1,0,0,1,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,0,0,1},
    {1,0,1,0,1,0,1,0,1,1,1,0,1,1,1,0,1,1,0,0,0,1,0,0,0,0,1,1,1,0,0,1,0,1,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,0,0,1,0,0,1,0,1,1},
    {1,0,1,0,1,0,1,0,0,0,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,0,0,1,0,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,1,0,0,1,1,0,0,1},
    {1,0,1,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,0,0,0,0,1,0,1,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,1,0,1,1,0,1,0,0,1,1},
    {1,0,1,1,1,1,1,0,1,1,0,0,1,0,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,0,0,1},
    {1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,1,1,1,1,0,1,0,1,1,1,1,0,1,1,0,1,0,0,0,1,1,1,0,1,0,1,1,0,0,1,0,1,0,1,1,1},
    {1,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,1,1,0,1,0,1,0,1},
    {1,0,0,0,0,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,0,1,1,1,1,0,0,0,0,1},
    {1,0,1,1,0,0,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,0,0,1,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1},
    {1,0,1,1,0,0,1,0,1,0,0,0,0,0,0,1,0,0,1,1,1,1,0,1,1,0,0,0,0,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,0,0,1},
    {1,0,1,1,0,0,1,0,0,0,0,1,1,0,1,1,0,0,0,0,1,1,0,1,1,0,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,1,0,1},
    {1,0,1,0,0,0,1,0,1,1,1,1,1,0,1,0,0,1,1,1,1,1,0,1,1,0,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,0,1,0,1,0,0,0,0,1},
    {1,1,1,1,1,0,1,0,1,0,0,0,1,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,1,0,1,0,1,1,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,1,1,1,0,1,0,1,0,1,1,0,1},
    {1,1,0,0,0,0,1,1,1,0,1,1,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,0,1,0,1,1,1,0,1,1,1,0,1,0,0,0,0,0,1,0,1,0,0,1,0,1},
    {1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,1,1,1,0,0,1,0,1,1,0,1},
    {1,0,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,0,0,1,0,1,0,0,0,0,0,0,1,1,0,0,0,1,1},
    {1,0,1,1,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,1,1,1,1,0,1,0,0,1,1,0,1,1},
    {1,0,1,1,0,0,1,0,1,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,0,0,1,1,0,0,0,1,0,0,1,0,1,1,0,0,1,1},
    {1,0,1,1,0,1,1,0,0,1,0,0,0,0,0,1,0,0,1,0,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,1,1,1,0,1,1,0,1,0,1,0,1,1,0,1,0,1,0,1,1},
    {1,0,0,1,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1,1,0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0,0,0,0,0,1},
    {1,1,0,1,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,0,1,1,1,0,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,1,1,0,1,1,1,1,0,1,0,1,1},
    {1,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,1,0,1,0,0,1},
    {1,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,1,0,1,1,1,0,1,0,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,1,1,1,1},
    {1,1,0,1,0,1,0,1,0,0,0,1,0,1,1,0,1,0,0,0,0,0,1,0,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1},
    {1,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,0,1},
    {1,0,0,1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,1,0,1,1,1,1,1,1,0,1},
    {1,0,1,1,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,0,1,0,0,0,1,0,0,1},
    {1,0,1,1,1,1,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,1,0,1,0,1,0,1,1,1,1,0,1},
    {1,0,0,0,0,0,1,1,0,1,1,1,1,1,1,0,1,1,0,1,1,1,0,0,1,1,1,0,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,1},
    {1,0,1,1,1,0,0,0,0,1,1,1,1,0,1,0,1,1,0,1,0,1,1,0,1,1,1,0,1,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,0,1},
    {1,0,1,1,1,0,1,0,1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,1,1,1,1,0,1,0,1,0,1,0,1,1},
    {1,0,0,1,0,0,1,0,1,0,1,1,1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,1},
    {1,0,1,1,1,0,1,0,1,0,0,1,1,0,1,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,1,0,1,1,0,0,1,0,1,1,1,1,0,1,0,0,1,0,1,1},
    {1,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,0,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,0,1,1,1,0,0,1,1},
    {1,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,1,1,0,0,1,0,0,0,0,0,0,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,1,1},
    {1,1,0,0,1,1,0,1,1,1,0,1,0,0,1,0,0,1,0,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,1,1,1,1,0,1,0,1,1,1,1,0,1,1,0,1,0,0,1},
    {1,1,0,0,1,1,0,0,0,0,0,0,1,0,1,1,0,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,1,1,0,1},
    {1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,1,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,0,0,1,0,1,0,1,0,1,1,1,1,1},
    {1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,0,1,1,1,1,1,0,0,0,1},
    {1,0,0,1,0,1,0,1,0,1,1,0,0,0,0,0,1,0,0,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,1,0,1,1,1,0,1,0,0,0,0,0,1,0,1,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,0,0,0,0,0,1,0,1,1,1,0,0,0,1,0,10},
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};
void drawmap()      // 미로 그리는 함수
{
    int i, j, k = 0, y = 3;     // i,j는 2차원 배열에 저장된 값을 하나씩 확인하여, k에 저장하고 for()문을 이용하여 미로 출력, y는 y좌표를 설정하기 위해 사용

    for (i = 0; i < 45; i++)
    {
        chcolor(WHITE);
        gotoxy(21, y++);    // 이 위치부터 미로를 그리기 시작함, y값을 증가시켜 다음 줄로 넘어가도록 함

        for (j = 0; j < 63; j++)
        {
            chcolor(WHITE);
            k = map[i][j];
            switch (k)
            {
            case 0:
                printf("  ");
                break;
            case 1:
                printf("■");    // 1이면 벽을 출력
                break;
            case 9:
                chcolor(RED);
                printf("●");    // 9이면 플레이어를 빨간색으로 출력
                break;
            case 10:            // 10이면 종점을 노란색으로 출력
                chcolor(YELLOW);
                printf("▲");
                break;
            }
        }
    }
}
void move_miro()        // 미로 게임 플레이
{
    int site;
    int x = 1, y = 0;       // 처음 캐릭터의 위치

    while (1)
    {
        drawmap();
        site = _getch();

        switch (site)
        {
        case 224:

            site = _getch();

            switch (site)       // 이동 가능한 곳이면 플레이어를 움직이고, 이전에 있던 곳은 0으로 바꿔준다.
            {
            case RIGHT:
                y++;
                if (map[x][y] == 0)
                {
                    map[x][y] = 9;
                    map[x][y - 1] = 0;
                }
                else if (map[x][y] == 1)
                {
                    y--;
                }
                break;
            case LEFT:      // 왼쪽과 위에키만 문제 발견
                y--;
                if (y == -1)
                {
                    y++;
                    continue;
                }
                else if (map[x][y] == 0)
                {
                    map[x][y] = 9;
                    map[x][y + 1] = 0;
                }
                else if (map[x][y] == 1)
                {
                    y++;
                }
                break;
            case UP:
                x--;
                if (x == -1)    // 2차원 배열에서 -1값이 나올 순 없으므로, -1이 나오면 건너뛰고 진행하도록 설정
                {
                    x++;
                    continue;
                }
                else if (map[x][y] == 0)
                {
                    map[x][y] = 9;
                    map[x + 1][y] = 0;
                }
                else if (map[x][y] == 1)
                {
                    x++;
                }
                break;
            case DOWN:
                x++;
                if (map[x][y] == 0)
                {
                    map[x][y] = 9;
                    map[x - 1][y] = 0;
                }
                else if (map[x][y] == 1)
                {
                    x--;
                }
                break;
            }
        }
        if (map[x][y] == 10)        // 플레이어가 종점에 도착했을 경우
        {
            map[x][y] = 9;
            system("cls");
            GameSet();
            break;
        }
    }
}
void Draw(void)
{
    int i;

    //   나중에 이 부분에 오브젝트들을 이차원 배열에 추가하는 내용이 온다.
    DrawPlayer();   //   호출
    DrawStar();      //   호출

    //   이차원 배열에 있는 오브젝트들을 렌더하는 부분이 for문에서 한다.
    for (i = 0; i < HEIGHT; i++)
    {
        MoveCursor(0, i);   //   각 행의 위치로 커서를 이동시키고
        printf(screen[i]);   //   이차원 배열의 내용을 렌더( 각 행은 문자열이다. )
    }
}

/*   지우는 함수로, 이차원 배열screen에 있는 내용을 지운다. */
void Clear(void)
{
    int i;

    for (i = 0; i < HEIGHT; i++)
    {
        //   이차원 배열의 요소에 공백문자를 덮어 씌우고
        memset(screen[i], ' ', WIDTH);

        //   각 행의 맨 마지막 자리에 널 문자를 삽입한다.
        screen[i][WIDTH - 1] = NULL;
    }
}

/*   플레이어를 그려주는 함수로 이차원 배열screen에 플레이어를 저장한다.   */
void DrawPlayer(void)
{
    int i;

    int x = g_Player.x - P_COUNT / 2;   //   플레이어 캐릭터의 맨 왼쪽 날개의 x위치를 구한다.
    int y = g_Player.y;               //   플레이어 캐릭터의 y위치

    //   플레이어 캐릭터의 y위치가 맵을 벗어나면 이차원 배열에 저장하지 않는다.
    if (y < 0 || y >= HEIGHT) return;

    //   이차원 배열에 플레이어를 저장한다.
    for (i = 0; P_COUNT > i; i++)
    {
        //   플레이어의 맨 왼쪽서부터 맵 범위 안에 있으면 저장을 한다. 
        if (x >= 0 && x < WIDTH)
            screen[y][x] = Player_Unit[i];

        x++;   //   오른쪽으로 이동시키기 위해 증가 연산
    }
}

/*   오브젝트들의 정보를 초기화 하는 함수   */
void InitObject(void)
{
    int i;

    //   플레이어의 위치를 지정
    g_Player.x = WIDTH / 2;
    g_Player.y = 17;

    //   별들의 정보를 초기화
    for (i = 0; i < STAR_MAX; i++)
    {
        g_Star[i].x = 0;
        g_Star[i].y = 0;
        g_Star[i].LiveFlag = 0;   //   죽어있는 상태로 초기화
    }
}

/*   키 입력을 통해 플레이어를 움직이는 함수      */
void PlayerAction(void)
{
    if (GetAsyncKeyState(VK_LEFT))
        g_Player.x -= 2;

    if (GetAsyncKeyState(VK_RIGHT))
        g_Player.x += 2;

    if (GetAsyncKeyState(VK_UP))
        g_Player.y -= 1;

    if (GetAsyncKeyState(VK_DOWN))
        g_Player.y += 1;
}

/* 플레이어가 맵 영역을 벗어났는지 체크를 해서 위치를 조정하는 함수 */
void Block(void)
{
    int leftPosX = g_Player.x - P_COUNT / 2;
    int rightPosX = g_Player.x + P_COUNT;

    if (leftPosX < 0)
        g_Player.x = 2;   //   g_Player.x = P_COUNT / 2

    if (rightPosX > WIDTH + 1)
        g_Player.x = WIDTH - P_COUNT + 1;

    if (g_Player.y < 1)
        g_Player.y = 1;

    if (g_Player.y >= HEIGHT - 1)
        g_Player.y = HEIGHT - 1;
    /*
    if (g_Player.x < P_COUNT / 2)
       g_Player.x = P_COUNT / 2;

    if (g_Player.x > WIDTH - P_COUNT + 1)
       g_Player.x = WIDTH - P_COUNT + 1;

    if (g_Player.y < 1)
       g_Player.y = 1;

    if (g_Player.y >= HEIGHT - 1)
       g_Player.y = HEIGHT - 1;
    */
}

/*   별들을 그려주는 함수로 이차원 배열screen에 별들을 저장한다.   */
void DrawStar(void)
{
    int i;

    for (i = 0; i < STAR_MAX; i++)
    {
        //   죽어있는 별은 렌더할 필요 없다.
        if (g_Star[i].LiveFlag == 0)
            continue;

        int x = g_Star[i].x;
        int y = g_Star[i].y;

        //   영역을 벗어난 경우에는 렌더할 필요 없다.
        if (y < 0 || y >= HEIGHT)
            return;

        //   영역 내에 존재하는 별이라면 이차원 배열에 저장
        if (x >= 0 && x < WIDTH)
            screen[y][x] = Star_Unit;
    }
}

/*   생성된 별들만 아래로 이동시키는 함수   */
void StarAction(void)
{
    int i;

    for (i = 0; i < STAR_MAX; i++)
    {
        // 생성된 별인 경우에만 아래로 이동
        if (g_Star[i].LiveFlag == 0)
            continue;

        g_Star[i].y += 1;   //   아래로 한 칸 이동                

        //   화면 밖으로 나간 별은 지운다.
        if (g_Star[i].y > HEIGHT - 1)
            g_Star[i].LiveFlag = 0;
    }
}

/*   별을 생성하는 함수 */
void CreateStar(void)
{
    int i;

    for (i = 0; i < STAR_MAX; i++)
    {
        if (g_Star[i].LiveFlag == 0)
        {
            g_Star[i].LiveFlag = 1;   //   1로 설정

            //   별이 떨어질 위치의 y값은 0이어야 한다.
            g_Star[i].x = rand() % (WIDTH - 1);
            g_Star[i].y = 0;

            break;   //   별을 하나 생성하면 break로 반복문 탈출
        }
    }
}

/*   별들과 플레이어의 충돌체크하는 함수   */
int CheckCollision(void)
{
    char kb = '\0';
    int i;
    int leftPosX = g_Player.x - P_COUNT / 2;
    int rightPosX = g_Player.x + P_COUNT / 2;

    for (i = 0; i < STAR_MAX; i++)
    {
        //   충돌 체크는 생성된 별들과 한다.
        if (g_Star[i].LiveFlag == 0)
            continue;

        //   별의 X위치가 플레이어의 X위치 사이에 있고
        if (leftPosX <= g_Star[i].x && g_Star[i].x <= rightPosX)
        {
            //   y좌표가 같다면 충돌이 되었음을 의미한다.
            if (g_Star[i].y == g_Player.y)
            {
                g_Star[i].LiveFlag = 0;   //   별을 죽은 것으로 처리
                system("cls");
                gotoxy(20, 20);
                printf("별에 맞았습니다. 게임을 다시 시작합니다.\n");
                kb = _getch();
                
                system("cls");
                return 2;
                
            }
        }
    }
}

void game_recipe()
{
    char kb = "\0";
    GameSet();
    chcolor(WHITE);
    gotoxy(25, 20); printf("$ X 피하기! $");
    gotoxy(20, 22); printf("게임 방법 : x가 200이 될 때 까지 피해라");

    kb = _getch();
    if (kb == Space)
    {
        system("cls");
        return 2;
    }
    system("cls");
}

int main()
{
    int key = 0;                             //별 피하기 죽었을 경우 다시 돌아가기 위한 키
    char kb = '\0';
    system("mode con cols=170 lines=50");    //cols = 칸/행 (가로)  lines = 줄/열 (세로)
    GameSet();          // 게임 테두리 출력
    StartGame();        // 게임 시작 화면 출력
    
    
    kb = _getch();
    system("cls");
    if (kb == Space)        // 입력 받은 키가 스페이스바면 화면 전환
    {
        GameSet();
        GameSelect();
    }


    kb = _getch();
    if (kb == '1')      // 게임 아이디 생성 후 시작
    {
        RedRain();              // 빨간색 비 출력 후 화면 전환
        system("cls");
        GameSet();
        introduce();
        join();
        join2();
        system("cls");
        GameSet();
        login_main();
        system("cls");
        GameSet();
        make_username();
    }
    else if (kb == '2')     // 이전 게임 이어서 하기
    {
        RedRain();          // 빨간색 비 출력 후 화면 전환
        GameSet();
        login_main();
        make_username();
    }
    
    kb = _getch();
    system("cls");
    GameSet();
    story();
    story2();
    game1();
    WalkWay();
    moveway();
    room();
    story3();
    system("cls");
    GameSet();
    Qu();
    kb = _getch();
    system("cls");
    move_miro();
    WalkWay();
    
    moveway();
    
    kb = _getch();
    system("cls");

reset:
    game_recipe();

    Initial();

    InitObject();   //   오브젝트들의 정보를 초기화
    
    ClearScreen();   //   콘솔 화면 창을 지우고

    srand((unsigned)time(NULL));
    int cnt = 0;
    do
    {
        gotoxy(120, 20); printf("별 : %d", cnt);
        /* 10퍼센트 확률로 별 하나 생성 */
        if (rand() % 100 < 99.9999)
            CreateStar();

        StarAction();   //   생성된 별을 아래로 이동

        PlayerAction();   //   PlayerAction() 함수 호출

        key = CheckCollision();   //   플레이어와 별들의 충돌체크 함수 호출
        if (key == 2)
        {
            cnt = 0;
            goto reset;
        }
        Block();      //   Block() 함수 호출

        Clear();      //   이차원 배열의 내용을 지우고

        Draw();         //   이차원 배열에 오브젝트들을 배열에 담고 렌더((그린다.)
        cnt++;
        Sleep(100);
    } while (cnt < 300);      // 300이 채워지면 탈출


}
